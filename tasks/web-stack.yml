Parameters:
  NetworkStackName:
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"
    Default: "dev-network-stack"

Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: Default
  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ExecutionRoleArn: "arn:aws:iam::202910097882:role/ecsTaskExecutionRole"
      ContainerDefinitions:
        - Name: "simple-app"
          Essential: true
          Command: ["/bin/sh -c \"echo '<html> <head> <title>Amazon ECS Sample App</title> <style>body {margin-top: 40px; background-color: #333;} </style> </head><body> <div style=color:white;text-align:center> <h1>Amazon ECS Sample App</h1> <h2>Congratulations!</h2> <p>Your application is now running on a container in Amazon ECS.</p> </div></body></html>' >  /usr/local/apache2/htdocs/index.html && httpd-foreground\""]
          EntryPoint: ["sh", "-c"]
          Image: "httpd:2.4"
          PortMappings:
            - ContainerPort: 80
              HostPort: 80
      Cpu: 256
      Family: "my-task-definition"
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities: ["FARGATE"]
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: my-ecs-service
      Cluster: !GetAtt ECSCluster.Arn
      TaskDefinition: !Ref ECSTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - Fn::ImportValue:
                Fn::Sub: "${NetworkStackName}-PublicSecurityGroup"
          Subnets: !Split
            - ','
            - Fn::ImportValue:
                Fn::Sub: "${NetworkStackName}-PublicSubnets"