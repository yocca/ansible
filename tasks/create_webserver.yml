###
---
- set_fact:
    task_definition_name: "my-task"

######
# ECS - Task Definition
# Registers 'task-definition'
# Doc: 'https://docs.ansible.com/ansible/latest/modules/ecs_taskdefinition_module.html'
######
- name: Create task definition
  ecs_taskdefinition:
    state: present
    containers:
      - name: simple-app
        command:
          - "/bin/sh -c \"echo '<html> <head> <title>Amazon ECS Sample App</title> <style>body {margin-top: 40px; background-color: #333;} </style> </head><body> <div style=color:white;text-align:center> <h1>Amazon ECS Sample App</h1> <h2>Congratulations!</h2> <p>Your application is now running on a container in Amazon ECS.</p> </div></body></html>' >  /usr/local/apache2/htdocs/index.html && httpd-foreground\""
        entryPoint:
          - "sh"
          - "-c"
        essential: true
        image: "httpd:2.4"
        portMappings:
          - containerPort: 80
            hostPort: 80
    cpu: 256
    family: "fargate-task-definition"
    memory: 512
    network_mode: awsvpc
    launch_type: FARGATE
    force_create: no

######
# ECS - Cluster
# Doc: 'https://docs.ansible.com/ansible/latest/modules/ecs_cluster_module.html'
######
- ecs_cluster:
    name: default
    state: present

######
# ECS - Service
# Doc: 'https://docs.ansible.com/ansible/latest/modules/ecs_service_module.html'
######
- ecs_service:
    state: present
    name: console-test-service
    cluster: default
    task_definition: "fargate-task-definition"
    desired_count: 1
    launch_type: FARGATE
    network_configuration:
      assign_public_ip: yes
      subnets: "{{ public_subnets }}"
      security_groups:
        - "{{ public_sg_id }}"
