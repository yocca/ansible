###
---
- set_fact:
    region: "{{ vpc['region'] }}"
    vpc_cidr: "{{ vpc['cidr'] }}"

######
# VPC
# Registers 'vpc' and 'vpc_id'
# Doc: 'http://docs.ansible.com/ansible/latest/modules/ec2_vpc_net_module.html'
######
- name: Create VPC 
  register: vpc_facts
  ec2_vpc_net:
    region: "{{ region }}"
    name: "{{ env }}-vpc-{{ region }}"
    cidr_block: "{{ vpc_cidr }}"
    resource_tags:
      Name: "{{ env }} vpc in {{ region }}"
- set_fact:
    vpc_id: "{{ vpc_facts['vpc']['id'] }}"

######
# IGW
# Registers 'igw'
# Doc: 'http://docs.ansible.com/ansible/latest/modules/ec2_vpc_igw_module.html'
######
- name: Create VPC IGW
  register: igw
  ec2_vpc_igw:
    region: "{{ region }}"
    vpc_id: "{{ vpc_id }}"
- set_fact:
    igw_id: "{{ igw['gateway_id'] }}"

######
# Subnets
# Registers 'subnet_public_a'..'subnet_private_a'..etc
# Doc: 'http://docs.ansible.com/ansible/latest/modules/ec2_vpc_subnet_module.html'
######

- name: Run Subnet Task File
  include_tasks: create_subnet.yml
  with_items: "{{ vpc['subnets'] }}"
  loop_control:
    loop_var: subnet 

- set_fact:
    private_subnets:
      - "{{ subnet_private_a['id'] }}"
      - "{{ subnet_private_b['id'] }}"
      - "{{ subnet_private_c['id'] }}"
    public_subnets:
      - "{{ subnet_public_a['id'] }}"
      - "{{ subnet_public_b['id'] }}"
      - "{{ subnet_public_c['id'] }}"

######
# NGW - NAT Gateway
# Returns 'ngw' and 'ngw_id'
# Doc: 'http://docs.ansible.com/ansible/latest/modules/ec2_vpc_nat_gateway_module.html'
######
- name: Create NAT Gateway
  register: ngw
  ec2_vpc_nat_gateway:
    state: present
    region: "{{ region }}"
    subnet_id: "{{ subnet_public_a['id'] }}"
    if_exist_do_not_create: true
    wait: true
- set_fact:
    ngw_id: "{{ ngw['nat_gateway_id'] }}"


######
# Route Tables (Public/Private)
# Returns
# Doc: 'http://docs.ansible.com/ansible/latest/modules/ec2_vpc_route_table_module.html'
######
- name: Create Public Route Table
  ec2_vpc_route_table:
    region: "{{ region }}"
    vpc_id: "{{ vpc_id }}"
    tags:
      Name: "{{ env }}-public-rt"
    subnets: "{{ public_subnets }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw_id }}"

- name: Create Private Route Table
  ec2_vpc_route_table:
    region: "{{ region }}"
    vpc_id: "{{ vpc_id }}"
    tags:
      Name: "{{ env }}-private-rt"
    subnets: "{{ private_subnets }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ ngw_id }}"

#######
## Public SG - Security Group
## Returns 'public_sg', 'public_sg_id'
## Doc: 'http://docs.ansible.com/ansible/latest/modules/ec2_group_module.html'
#######
- name: Create Public SG
  register: public_sg
  ec2_group:
    region: "{{ region }}"
    name: "{{ env }}-public-sg"
    description: "Public Security Group"
    vpc_id: "{{ vpc_id }}"
    rules:
      - proto: tcp
        ports:
          - 80
          - 443
        cidr_ip: 0.0.0.0/0
- set_fact:
    public_sg_id: "{{ public_sg['group_id'] }}"

#######
## Private SG - Security Group
## Returns 'private_sg', 'private_sg_id'
## Doc: 'http://docs.ansible.com/ansible/latest/modules/ec2_group_module.html'
#######
- name: Create Private SG
  register: "private_sg"
  ec2_group:
    region: "{{ region }}"
    name: "{{ env }}-private-sg"
    description: "Private Security Group"
    vpc_id: "{{ vpc_id }}"
    rules:
      - proto: tcp
        ports:
          - 80
          - 443
        group_name: "{{ env }}-public-sg"
- set_fact:
    private_sg_id: "{{ private_sg['group_id'] }}"

- name: Run Webserver Creation
  include_tasks: create_webserver.yml